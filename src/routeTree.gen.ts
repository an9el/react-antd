/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutSplatImport } from './routes/_layout/$'

// Create Virtual Routes

const LayoutIndexLazyImport = createFileRoute('/_layout/')()
const LayoutTableIndexLazyImport = createFileRoute('/_layout/table/')()
const LayoutStateReactQueryLazyImport = createFileRoute(
  '/_layout/state/react-query',
)()
const LayoutFormFormilyLazyImport = createFileRoute('/_layout/form/formily')()
const LayoutStateJotaiIndexLazyImport = createFileRoute(
  '/_layout/state/jotai/',
)()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout/index.lazy').then((d) => d.Route))

const LayoutSplatRoute = LayoutSplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTableIndexLazyRoute = LayoutTableIndexLazyImport.update({
  id: '/table/',
  path: '/table/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/table/index.lazy').then((d) => d.Route),
)

const LayoutStateReactQueryLazyRoute = LayoutStateReactQueryLazyImport.update({
  id: '/state/react-query',
  path: '/state/react-query',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/state/react-query.lazy').then((d) => d.Route),
)

const LayoutFormFormilyLazyRoute = LayoutFormFormilyLazyImport.update({
  id: '/form/formily',
  path: '/form/formily',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/form/formily.lazy').then((d) => d.Route),
)

const LayoutStateJotaiIndexLazyRoute = LayoutStateJotaiIndexLazyImport.update({
  id: '/state/jotai/',
  path: '/state/jotai/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/state/jotai/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_layout/$': {
      id: '/_layout/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof LayoutSplatImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/form/formily': {
      id: '/_layout/form/formily'
      path: '/form/formily'
      fullPath: '/form/formily'
      preLoaderRoute: typeof LayoutFormFormilyLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/state/react-query': {
      id: '/_layout/state/react-query'
      path: '/state/react-query'
      fullPath: '/state/react-query'
      preLoaderRoute: typeof LayoutStateReactQueryLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/table/': {
      id: '/_layout/table/'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof LayoutTableIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/state/jotai/': {
      id: '/_layout/state/jotai/'
      path: '/state/jotai'
      fullPath: '/state/jotai'
      preLoaderRoute: typeof LayoutStateJotaiIndexLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutSplatRoute: typeof LayoutSplatRoute
  LayoutIndexLazyRoute: typeof LayoutIndexLazyRoute
  LayoutFormFormilyLazyRoute: typeof LayoutFormFormilyLazyRoute
  LayoutStateReactQueryLazyRoute: typeof LayoutStateReactQueryLazyRoute
  LayoutTableIndexLazyRoute: typeof LayoutTableIndexLazyRoute
  LayoutStateJotaiIndexLazyRoute: typeof LayoutStateJotaiIndexLazyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSplatRoute: LayoutSplatRoute,
  LayoutIndexLazyRoute: LayoutIndexLazyRoute,
  LayoutFormFormilyLazyRoute: LayoutFormFormilyLazyRoute,
  LayoutStateReactQueryLazyRoute: LayoutStateReactQueryLazyRoute,
  LayoutTableIndexLazyRoute: LayoutTableIndexLazyRoute,
  LayoutStateJotaiIndexLazyRoute: LayoutStateJotaiIndexLazyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/$': typeof LayoutSplatRoute
  '/': typeof LayoutIndexLazyRoute
  '/form/formily': typeof LayoutFormFormilyLazyRoute
  '/state/react-query': typeof LayoutStateReactQueryLazyRoute
  '/table': typeof LayoutTableIndexLazyRoute
  '/state/jotai': typeof LayoutStateJotaiIndexLazyRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/$': typeof LayoutSplatRoute
  '/': typeof LayoutIndexLazyRoute
  '/form/formily': typeof LayoutFormFormilyLazyRoute
  '/state/react-query': typeof LayoutStateReactQueryLazyRoute
  '/table': typeof LayoutTableIndexLazyRoute
  '/state/jotai': typeof LayoutStateJotaiIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/_layout/$': typeof LayoutSplatRoute
  '/_layout/': typeof LayoutIndexLazyRoute
  '/_layout/form/formily': typeof LayoutFormFormilyLazyRoute
  '/_layout/state/react-query': typeof LayoutStateReactQueryLazyRoute
  '/_layout/table/': typeof LayoutTableIndexLazyRoute
  '/_layout/state/jotai/': typeof LayoutStateJotaiIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/$'
    | '/'
    | '/form/formily'
    | '/state/react-query'
    | '/table'
    | '/state/jotai'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/$'
    | '/'
    | '/form/formily'
    | '/state/react-query'
    | '/table'
    | '/state/jotai'
  id:
    | '__root__'
    | '/_layout'
    | '/login'
    | '/_layout/$'
    | '/_layout/'
    | '/_layout/form/formily'
    | '/_layout/state/react-query'
    | '/_layout/table/'
    | '/_layout/state/jotai/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/$",
        "/_layout/",
        "/_layout/form/formily",
        "/_layout/state/react-query",
        "/_layout/table/",
        "/_layout/state/jotai/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_layout/$": {
      "filePath": "_layout/$.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/form/formily": {
      "filePath": "_layout/form/formily.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/state/react-query": {
      "filePath": "_layout/state/react-query.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/table/": {
      "filePath": "_layout/table/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/state/jotai/": {
      "filePath": "_layout/state/jotai/index.lazy.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
